<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/2021/04/02/hello-world/</url>
    <content><![CDATA[<html><head></head><body><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start">Quick Start<a class="post-anchor" href="#Quick-Start"></a></h2><h3 id="Create-a-new-post">Create a new post<a class="post-anchor" href="#Create-a-new-post"></a></h3><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></tbody></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server">Run server<a class="post-anchor" href="#Run-server"></a></h3><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></tbody></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files">Generate static files<a class="post-anchor" href="#Generate-static-files"></a></h3><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></tbody></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites">Deploy to remote sites<a class="post-anchor" href="#Deploy-to-remote-sites"></a></h3><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></tbody></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
</body></html>]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2021/04/10/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E6%A6%82%E8%BF%B0/</url>
    <content><![CDATA[<html><head></head><body><h1 id="PHP代码审计">PHP代码审计<a class="post-anchor" href="#PHP代码审计"></a></h1><h3 id="工具">工具<a class="post-anchor" href="#工具"></a></h3><h4 id="代码编辑器">代码编辑器<a class="post-anchor" href="#代码编辑器"></a></h4><ul>
<li>Notepad++</li>
<li>Visual Studio Code</li>
</ul>
<h4 id="代码审计工具">代码审计工具<a class="post-anchor" href="#代码审计工具"></a></h4><ul>
<li>Seay源代码审计系统</li>
<li>Firtufy SCA</li>
<li>RIPS</li>
</ul>
<h4 id="漏洞验证辅助">漏洞验证辅助<a class="post-anchor" href="#漏洞验证辅助"></a></h4><ul>
<li>BurpSuite Community</li>
<li>浏览器扩展</li>
<li>编码转换、加密解密工具 </li>
<li>正则调试工具</li>
<li>SQL执行监控工具</li>
</ul>
<h3 id="思路">思路<a class="post-anchor" href="#思路"></a></h3><blockquote>
<ol>
<li>检查铭感函数的参数，然后回溯变量，判断变量是否可控并且没有经过严格的过滤（逆向追踪）</li>
<li>找出哪些文件在接收外部传入的参数，然后跟踪变量的传递过程，观察是否有变量传入到高危函数中，或者传递的过程中是否有代码逻辑漏洞（正向追踪）</li>
<li>直接挖掘功能点漏洞，根据自身的禁言判断该类应用通常在哪些功能中会出现漏洞，直接全篇阅读该功能代码</li>
</ol>
<ul>
<li>学好代码审计需要掌握一下几点<ul>
<li>PHP编程语言的特性和基础</li>
<li>Web前端编程基础</li>
<li>漏洞形成原理</li>
<li>代码审计思路</li>
<li>不同系统、中间件之间的特性差异</li>
</ul>
</li>
</ul>
</blockquote>
<h3 id="PHP核心配置">PHP核心配置<a class="post-anchor" href="#PHP核心配置"></a></h3><p>​                                                            <strong>常见<code>PHP_INI_*</code>常量的定义</strong></p>
<table>
<thead>
<tr>
<th align="center">常量</th>
<th align="center">含义</th>
</tr>
</thead>
<tbody><tr>
<td align="center"><strong>PHP_INI_USER</strong></td>
<td align="center">该配置选项可在用户的PHP脚本或Windows注册表中设置</td>
</tr>
<tr>
<td align="center"><strong>PHP_INI_PERDIR</strong></td>
<td align="center">该配置选项可在<code>php.ini</code>、<code>.htaccess</code>或<code>httpd.conf</code>中设置</td>
</tr>
<tr>
<td align="center"><strong>PHP_INI_SYSTEM</strong></td>
<td align="center">该配置选项可在<code>php.ini</code>或<code>httpd.conf</code>中配置</td>
</tr>
<tr>
<td align="center"><strong>PHP_INI_ALL</strong></td>
<td align="center">该配置选项可在任何地方设置</td>
</tr>
<tr>
<td align="center"><strong>php.ini.only</strong></td>
<td align="center">该配置选项可仅可在php.ini中配置</td>
</tr>
</tbody></table>
<h4 id="常见核心配置"><strong>常见核心配置</strong><a class="post-anchor" href="#常见核心配置"></a></h4><p><font size="4" color="red">register_globals(全局变量注册开关)</font></p>
<blockquote>
<p>版本：&lt;= <code>PHP 5.3.0</code></p>
</blockquote>
<p>在选项设置为on的情况下，会直接吧用户GET、POST等方式提交上来的参数注册成全局变量并初始化值为参数对应的值，使得提交的参数可以直接在脚本中使用</p>
<p><font size="4" color="red">allow_url_include(是否允许包含远程文件)</font></p>
<blockquote>
<p>版本：<code>PHP all</code>    PHP 5.2.0之后默认为Off</p>
<p>类似函数：<code>allow_url_fopen(是否打开远程文件)</code></p>
</blockquote>
<p>在该配置为on的情况下，它可以直接远程包含文件，当存在<code>include($var)</code>并且<code>$var</code>可控的情况下，可以直接控制其来执行PHP代码</p>
<p><a href="https://gitee.com/ms12020/picture/raw/master/images/image-20201217095516607.png" data-caption="image-20201217095516607" data-fancybox="images"><img src="https://gitee.com/ms12020/picture/raw/master/images/image-20201217095516607.png" alt="image-20201217095516607"></a></p>
<p><a href="https://gitee.com/ms12020/picture/raw/master/images/image-20201217100014708.png" data-caption="image-20201217100014708" data-fancybox="images"><img src="https://gitee.com/ms12020/picture/raw/master/images/image-20201217100014708.png" alt="image-20201217100014708"></a></p>
<p><font size="4" color="red">magic_quotes_gpc(魔术引号自动过滤)</font></p>
<blockquote>
<p>版本：<code>&lt; PHP 5.4</code>；    <code>PHP 5.3</code>之后不推荐使用该函数</p>
<p>置返回： <code>&lt; PHP 4.2.3</code>配置范围为PHP_INI_ALL；<code>&gt; PHP 4.2.3</code>配置范围为PHP_INI_PERDIR</p>
</blockquote>
<p>当选项为On时，在不存在编码或者其他绕过绕过的情况下，可以使得很多漏洞无法利用，他会自动在GET、POST、COOKIE变量中的单引号<code>''</code>、双引号<code>""</code>、反斜杠<code>\</code>以及空字符<code>NULL</code>的前面加上反斜杠</p>
<p>在<code>PHP5</code>中<code>magic_quotes_gpc</code>不会过滤<code>$_SERVER</code>变量，导致很多client-ip、referer一类的漏洞能够利用。</p>
<p><a href="https://gitee.com/ms12020/picture/raw/master/images/image-20201217102901642.png" data-caption="image-20201217102901642" data-fancybox="images"><img src="https://gitee.com/ms12020/picture/raw/master/images/image-20201217102901642.png" alt="image-20201217102901642"></a></p>
<p><a href="https://gitee.com/ms12020/picture/raw/master/images/image-20201217103333525.png" data-caption="image-20201217103333525" data-fancybox="images"><img src="https://gitee.com/ms12020/picture/raw/master/images/image-20201217103333525.png" alt="image-20201217103333525"></a></p>
<p><font size="4" color="red">open_basedir(PHP可访问目录)</font></p>
<blockquote>
<p>版本：PHP ALL</p>
<p>范围：<code>&lt; PHP 5.2.3</code>配置范围为PHP_INI_SYSTEM；<code>&gt; PHP 5.2.3</code>配置范围PHP_INI_ALL</p>
</blockquote>
<p><code>open_basedir</code>指令用来限制PHP只能访问哪些目录，通常只需要设置Web文件目录即可，如果需要加载其他外部脚本，也需要吧脚本所在的目录路径加入到<code>open_basedir</code>指令中，多个目录用分号(<code>;</code>)分隔</p>
<figure class="highlight php"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># `open_basedir`指定的实际上时前缀，而不是目录名</span></span><br><span class="line">open_basedir=/www/a		</span><br><span class="line"><span class="comment"># 设定可访问的目录为/www下以a开头的文件，也就是说/www/a和/www/ab都可以被访问</span></span><br><span class="line">open_basedir=/www/a/</span><br><span class="line"><span class="comment"># 设置只能访问/www/a文件</span></span><br></pre></td></tr></tbody></table></figure>

<p>当<code>open_basedir</code>配置目录后，执行脚本访问其他函数都需要验证文件是否符合配置要求，因此会影响效率</p>
<p><font size="4" color="red">disable_functions(禁用函数)</font></p>
<blockquote>
<p>版本：PHP ALL</p>
<p>范围：该指令的配置范围为<code>php.ini only</code></p>
</blockquote>
<p>在正式生产环境中，为了更安全地允许PHP，也可以使用<code>disable_functions</code>指令来禁止一些敏感函数的使用。当你使用该指令禁用危险函数时，切记将<code>dl()</code>函数加到禁止列表中，因为攻击者可以利用<code>dl()</code>函数来加载自定义的PHP扩展以突破<code>disable_functions</code>的限定</p>
<figure class="highlight php"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 多个函数之间用逗号（,）分隔</span></span><br><span class="line">disable_functions=phpinfo,<span class="keyword">eval</span>,passthru,exec,system,dl</span><br></pre></td></tr></tbody></table></figure>



<p><font size="4" color="red">disable_errors和error_reporting(错误显示)</font></p>
<blockquote>
<p>版本：PHP ALL</p>
<p>配置范围：PHP_INI_ALL</p>
</blockquote>
<p><code>disable_errors</code>表明是否显示PHP脚本内部的错误，在调试时通常将PHP错误显示打开，但是在生产环境中，建议关闭PHP错误回显。</p>
<p>为了避免一些安全隐患，在设置<code>disable_errors=On</code>时，还可以配置<code>error_reporting</code>，这个选项用来配置错误显示的级别，可使用数字也可使用内置常量配置。</p>
<p>​                                                                <strong>数字格式与变量格式的详细信息</strong></p>
<p><a href="https://gitee.com/ms12020/picture/raw/master/images/image-20201217152415931.png" data-caption="image-20201217152415931" data-fancybox="images"><img src="https://gitee.com/ms12020/picture/raw/master/images/image-20201217152415931.png" alt="image-20201217152415931"></a></p>
<p>​                                                                             <strong>常用指令及说明</strong></p>
<p><a href="https://gitee.com/ms12020/picture/raw/master/images/image-20201217154018469.png" data-caption="image-20201217154018469" data-fancybox="images"><img src="https://gitee.com/ms12020/picture/raw/master/images/image-20201217154018469.png" alt="image-20201217154018469"></a></p>
</body></html>]]></content>
  </entry>
</search>
